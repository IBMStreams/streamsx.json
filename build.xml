<project name="streamsx.json"
    xmlns:if="ant:if"
    default="all" basedir=".">
    <description>
        Build file for streamsx.json project, built the toolkits and samples.
    </description>
  <!-- set global properties for this build -->
  <property environment="env" />
  <property name="streams.install" value="${env.STREAMS_INSTALL}" />
  <property name="toolkit" location="com.ibm.streamsx.json"/>
	<property name="toolkit.test" location="tests"/>
  <property name="tmp" location="tmp" />

  <path id="cp.streams">
    <pathelement location="${streams.install}/lib/com.ibm.streams.operator.jar" />
    <pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
    <pathelement location="${streams.install}/ext/lib/JSON4J.jar" />
  </path>

	
  <target name="all" depends="toolkit,samples"/>

  <target name="setcommitversion">
    <!-- Create the time stamp -->
    <tstamp/>

    <!-- Extract the git commit hash -->
    <exec executable="git" outputproperty="commithash">
        <arg value="rev-parse"/>
        <arg value="--short"/>
        <arg value="HEAD"/>
    </exec>

     <!-- Update the info.xml -->
     <replace file="${toolkit}/info.xml" token="__dev__" value="commit_${commithash}" summary="yes"/>

    <!-- Extract info from the toolkit's info.xml -->
    <xmlproperty file="${toolkit}/info.xml" prefix="tkinfo" keepRoot="no"/>

    <echo message="Toolkit Version: ${tkinfo.info:identity.info:version}"/>
    <echo message="Git Hash: ${commithash}"/>
     
  </target>

   <target name="revertversion">
    <exec executable="git">
        <arg value="checkout"/>
        <arg value="--"/>
        <arg value="${toolkit}/info.xml"/>
    </exec>
    </target>

  <target name="clean" depends="cleansamples,tests-clean"
        description="clean up" >
  	<ant dir="${toolkit}" target="clean"/>
        <delete dir="${tmp}"/>
  </target>

  <target name="toolkit"
        description="Build any code and index the toolkit." >
  	<ant dir="${toolkit}" target="all"/>
  </target>

  <target name="spldoc" depends="setcommitversion, _spldoc-json, revertversion"/>

  <target name="samples" depends="toolkit">
    <subant target="indextoolkit" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>
  <target name="cleansamples">
    <delete dir="samples/doc"/>
    <subant target="cleantoolkit" genericantfile="${basedir}/build.xml">
       <dirset dir="samples" includes="*"/>
    </subant>
  </target>
  
  <!-- Test targets -->
  <target name="tests" depends="toolkit">
     <ant dir="${toolkit.test}" target="test"/>
  </target>
  <target name="tests-clean">
     <ant dir="${toolkit.test}" target="clean"/>
  </target>


  <!-- Targets called on samples -->
  <target name="indextoolkit">
     <echo message="Tookit to index: ${basedir}"/>
     <exec executable="${streams.install}/bin/spl-make-toolkit">
        <arg value="--directory"/>
        <arg value="${basedir}"/>
     </exec>
  </target>
  <target name="cleantoolkit">
     <echo message="Tookit to clean: ${basedir}"/>
     <delete dir="${basedir}/doc"/>
     <exec executable="${streams.install}/bin/spl-make-toolkit">
        <arg value="--clean"/>
        <arg value="--directory"/>
        <arg value="${basedir}"/>
     </exec>
  </target>
  <!-- SPLDOC for just the toolkit -->
  <target name="_spldoc-json">
     <exec executable="${streams.install}/bin/spl-make-doc" failonerror="true">
        <arg value="--warn-no-comments"/>
        <arg value="--include-composite-operator-diagram"/>
        <arg value="--author"/>
        <arg value="IBMStreams Open Source Community at GitHub - https://github.com/IBMStreams/${ant.project.name}"/>
        <arg value="--doc-title"/>
        <arg value="IBM Streams ${tkinfo.info:identity.info:name} Toolkit"/>
        <arg value="--directory"/>
        <arg value="${toolkit}"/>
     </exec>
  </target>

  <!-- SPLDOC for the toolkit and the samples -->
  <target name="_spldoc-samples">
     <mkdir dir="samples/doc/json"/>
     <exec executable="${streams.install}/bin/spl-make-doc" failonerror="true">
        <arg value="--include-source"/>
        <arg value="--warn-no-comments"/>
        <arg value="--include-composite-operator-diagram"/>
        <arg value="--author"/>
        <arg value="IBMStreams Open Source Community at GitHub - https://github.com/IBMStreams/${ant.project.name}"/>
        <arg value="--doc-title"/>
        <arg value="IBM Streams ${tkinfo.info:identity.info:name} Toolkit and samples"/>
        <arg value="--output-directory"/>
        <arg value="samples/doc/json"/>
        <arg value="--toolkit-path"/>
        <arg value="${toolkit}:samples"/>
     </exec>
  </target>

  <target name="converter-javadoc">
    <property name="tkdir" value="${toolkit}"/>
    <echo message="Source: ${tkdir}/impl/java/src" />
    <javadoc packagenames="com.ibm.streamsx.json.converters.*"
      sourcepath="${tkdir}/impl/java/src"
      destdir="${tkdir}/doc/converters"
      classpathref="cp.streams" />
  </target>

  <!-- Targets to build releases -->
  <target name="release"  depends="clean,all,spldoc,converter-javadoc">
	<mkdir dir="${tmp}" />
        <property name="releasefilename" value="${tmp}/streamsx.json.toolkits-${tkinfo.info:identity.info:version}-${DSTAMP}-${TSTAMP}.tgz"/>
    	<tar compression="gzip" longfile="gnu"
             destfile="${releasefilename}"
    	     basedir="${basedir}"
             includes="${tkinfo.info:identity.info:name}/** samples/**"
             excludes="**/.gitignore **/.settings/** **/.settings **/.project **/.classpath"
    	/>
        <checksum file="${releasefilename}"/>
        <checksum algorithm="sha1" file="${releasefilename}"/>
    </target>
</project>
